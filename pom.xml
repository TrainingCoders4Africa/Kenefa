<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>c4a.api</groupId>
	<artifactId>kenefa</artifactId>
	<packaging>war</packaging>
	<version>1.0</version>
	<name>KENEFA API</name>
	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
		</license>
	</licenses>
	<properties>
		<applicationServer7Version>7.1.1.Final</applicationServer7Version>
		<jbossTargetDir>${project.build.directory}/cargo/installs/jboss-as-dist-${applicationServer7Version}/jboss-as-${applicationServer7Version}</jbossTargetDir>
		<!-- Explicitly declaring the source encoding eliminates the following 
			message: -->
		<!-- [WARNING] Using platform encoding (UTF-8 actually) to copy filtered 
			resources, i.e. build is platform dependent! -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- JBoss dependency versions -->
		<version.org.jboss.as.plugins.maven.plugin>7.3.Final</version.org.jboss.as.plugins.maven.plugin>
		<!-- Define the version of the JBoss BOMs we want to import. The JBoss 
			BOMs specify tested stacks. -->
		<version.org.jboss.bom>1.0.0.Final</version.org.jboss.bom>
		<!-- Alternatively, comment out the above line, and un-comment the line 
			below to use version 1.0.0.Final-redhat-1 which is a release certified to 
			work with JBoss EAP 6. It requires you have access to the JBoss EAP 6 maven 
			repository. -->
		<!-- <version.org.jboss.bom>1.0.0.Final-redhat-1</version.org.jboss.bom>> -->

		<!-- other plugin versions -->
		<version.compiler.plugin>2.3.1</version.compiler.plugin>
		<version.surefire.plugin>2.4.3</version.surefire.plugin>
		<version.war.plugin>2.1.1</version.war.plugin>

		<!-- maven-compiler-plugin -->
		<maven.compiler.target>1.6</maven.compiler.target>
		<maven.compiler.source>1.6</maven.compiler.source>
	</properties>

	<repositories>
		<repository>
			<id>DN_M2_Repo</id>
			<name>DataNucleus Repository</name>
			<url>http://www.datanucleus.org/downloads/maven2</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>DataNucleus_2</id>
			<url>http://www.datanucleus.org/downloads/maven2/</url>
		</pluginRepository>
	</pluginRepositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.jboss.bom</groupId>
				<artifactId>jboss-javaee-6.0-with-tools</artifactId>
				<version>${version.org.jboss.bom}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!--dependency> <groupId>org.jboss.spec</groupId> <artifactId>jboss-javaee-6.0</artifactId> 
			<version>1.0.0.Final</version> <type>pom</type> <scope>provided</scope> </dependency -->

		<!-- First declare the APIs we depend on and need for compilation. All 
			of them are provided by JBoss AS 7 -->

		<!-- Import the CDI API, we use provided scope as the API is included in 
			JBoss AS 7 -->
		<dependency>
			<groupId>javax.enterprise</groupId>
			<artifactId>cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the Common Annotations API (JSR-250), we use provided scope 
			as the API is included in JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.annotation</groupId>
			<artifactId>jboss-annotations-api_1.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Import the JAX-RS API, we use provided scope as the API is included 
			in JBoss AS 7 -->
		<dependency>
			<groupId>org.jboss.spec.javax.ws.rs</groupId>
			<artifactId>jboss-jaxrs-api_1.1_spec</artifactId>
			<scope>provided</scope>
		</dependency>

		<!--dependency> <groupId>log4j</groupId> <artifactId>log4j</artifactId> 
			<version>[1.2, 1.3)</version> </dependency -->
		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-enhancer</artifactId>
			<version>3.1.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-core</artifactId>
			<version>[2.9, )</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
			<version>2.9.3</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-api-jpa</artifactId>
			<version>3.1.3</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.jdo</groupId>
			<artifactId>jdo-api</artifactId>
			<version>[3.0, )</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-jpa_2.0_spec</artifactId>
			<version>1.1</version>
			<scope>provided</scope>
		</dependency>
		
	
	<dependency>
	<groupId>com.google.code</groupId>
	<artifactId>morphia</artifactId>
	<version>0.91</version>
</dependency>
            
<!--  Optional Jars (for certain features) but required by maven for bulding. -->
	<dependency>
		<groupId>cglib</groupId>
		<artifactId>cglib-nodep</artifactId>
		<version>[2.1_3,)</version>
		<type>jar</type>
		<optional>true</optional>
	</dependency>
	<dependency>
		<groupId>com.thoughtworks.proxytoys</groupId>
		<artifactId>proxytoys</artifactId>
		<version>1.0</version>
		<type>jar</type>
		<optional>true</optional>
	</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>
		<sourceDirectory>src/main/java</sourceDirectory>
		<outputDirectory>src/main/webapp/WEB-INF/classes</outputDirectory>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${version.compiler.plugin}</version>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.datanucleus</groupId>
				<artifactId>maven-datanucleus-plugin</artifactId>
				<version>3.1.0-release</version>
				<configuration>
					<fork>false</fork>
					<log4jConfiguration>${basedir}/log4j.properties</log4jConfiguration>
					<verbose>true</verbose>
					<api>JPA</api>
					<persistenceUnitName>kenefa</persistenceUnitName>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>enhance</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- JBoss AS plugin to deploy war -->
			<plugin>
				<groupId>org.jboss.as.plugins</groupId>
				<artifactId>jboss-as-maven-plugin</artifactId>
				<version>${version.org.jboss.as.plugins.maven.plugin}</version>
			</plugin>

		</plugins>
	</build>

	<profiles>

		<profile>
			<id>openshift</id>
			<build>
				<finalName>${project.artifactId}</finalName>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.1.1</version>
						<configuration>
							<outputDirectory>deployments</outputDirectory>
							<warName>ROOT</warName>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>local</id>
			<build>
				<finalName>${project.artifactId}</finalName>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.1.1</version>
						<configuration>
							<!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
							<failOnMissingWebXml>false</failOnMissingWebXml>
							<outputDirectory>C:\jboss-as-7.1.1.Final\standalone\deployments</outputDirectory>
							<warName>${project.artifactId}</warName>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Profile Jbozz Embedded -->
		<profile>
			<id>jbe</id>
			<build>

				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.1.1</version>
						<configuration>
							<!-- Java EE 6 doesn't require web.xml, Maven needs to catch up! -->
							<failOnMissingWebXml>false</failOnMissingWebXml>
							<packagingExcludes>
								WEB-INF/lib/datanucleus-core*.jar,
								WEB-INF/lib/datanucleus-mongodb*.jar,
								WEB-INF/lib/datanucleus-api-jpa*.jar,
								WEB-INF/lib/datanucleus-enhancer*.jar
							</packagingExcludes>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<version>1.2.1</version>
						<configuration>
							<container>
								<containerId>jboss71x</containerId>
								<artifactInstaller>
									<groupId>org.jboss.as</groupId>
									<artifactId>jboss-as-dist</artifactId>
									<version>${applicationServer7Version}</version>
								</artifactInstaller>
							</container>
						</configuration>
						<executions>
							<execution>
								<id>install-container</id>
								<phase>initialize</phase>
								<goals>
									<goal>install</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.codehaus.gmaven</groupId>
						<artifactId>gmaven-plugin</artifactId>
						<version>1.3</version>
						<executions>
							<execution>
								<id>copy-modules</id>
								<phase>initialize</phase>
								<goals>
									<goal>execute</goal>
								</goals>
								<configuration>
									<source>
										def toDir = new
										File(project.properties['jbossTargetDir'],'modules')
										def
										fromDir = new
										File(project.basedir,'.openshift/config/modules')
										log.info('Copying Datanuleus module from ' + fromDir + ' to '
										+ toDir)
										ant.copy(todir: toDir) {
										fileset(dir: fromDir) {
										exclude(name: 'README')
										}
										}
									</source>
								</configuration>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>
	</profiles>
</project>
